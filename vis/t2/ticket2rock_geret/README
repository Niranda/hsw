================================================================================
 Ticket2Rock ist die Beispielanwendung des Buchs "EJB 3 professionell" (dpunkt).
 Es implementiert eine einfache Webanwendung zur Onlinebuchung von Tickets für
 Rockkonzerte auf Basis von EJB 3.0 und JavaServer Faces.

 Copyright (C) 2006
 Jo Ehm, Dierk Harbeck, Stefan M. Heldt, Oliver Ihns, Jochen Jörg und Holger Koschek,
 Carsten Sahling, Roman Schloemmer

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; either version 2
 of the License, or (at your option) any later version.
  
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
  
 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
================================================================================

Ticket2Rock lässt sich in Eclipse integrieren sowie mit Hilfe von Ant übersetzen
und installieren. Es ist für die Nutzung mit dem JBoss 4.0 Application Server
inklusive JBoss EJB3 Service optimiert. EJB 3.0 benötigt Java 5.0.

---[ Bezugsquellen ]------------------------------------------------------------
Ticket2Rock ist als Open Source-Projekt bei JavaForge verfügbar:
  http://www.javaforge.com/proj/summary.do?proj_id=1150

Subversion Repository:
  http://svn.javaforge.com/svn/ticket2rock

Subversion Repository Browser:
  http://www.javaforge.com/proj/sources/sccBrowse.do?proj_id=1150

Mehr Informationen zu Ticket2Rock und dem Buch "EJB 3 professionell":
  http://www.ejb3buch.de

---[ Testumgebung ]-------------------------------------------------------------
Getestet wurde Ticket2Rock mit
* Sun J2SE Development Kit 5.0 
* JBoss 4.0.5 GA Patch 1
* JBoss EJB 3.0 RC9 FD
* JBoss EJB 3.0 Embeddable APLHA9

---[ JBoss-Konfiguration ]------------------------------------------------------
Im JBoss muss eine Queue namens 'queue/ticket2rock' eingerichtet sein, um die
Stornierung der Ticketbestellung mittels JMS-Nachricht durchführen zu können.
JBoss richtet die Queue automatisch ein wenn sie nicht vorhanden ist.
Zum manuellen Einrichten der Queue geht man wie folgt vor:
* JBoss JMX Management Console starten: http://localhost:8080/jmx-console/
* In der Domäne 'jboss.mq' den Service 'DestinationManager' auswählen.
* In der MBean-Operation 'void createQueue(p1)' (ACHTUNG: Nicht die gleich-
  lautende Methode mit zwei Parametern verwenden) den Queue-Namen 'ticket2rock'
  eintragen und 'Invoke' klicken.
* Zum Agent View zurückkehren.
* In der Domäne 'jboss.mq.destination' sollte es jetzt einen Eintrag
  'name=ticket2rock,service=Queue' geben.

---[ Eclipse ]------------------------------------------------------------------
Das Modul enthält eine Eclipse-Projektdatei (.project).

Ticket2Rock benötigt Java 5.0. Es muss sichergestellt sein, dass der Compiler
Compliance Level ('Properties/Java Compiler/JDK Compliance) auf '5.0' gesetzt
ist.

Wir haben alle notwendigen Libraries mit ins Repository gelegt, sodass das
Uebersetzen der Quelltexte und die Ausfuehrung der Tests ohne weitere 
Abhaengigkeiten funktioniert.

---[ Ant ]----------------------------------------------------------------------

Ticket2Rock enthält ein Ant-Buildskript (build.xml).
Der Aufruf von Ant mit der Option '-p' listet die verfügbaren Targets auf:

> ant -p
Buildfile: build.xml

Main targets:

 assemble-app  Builds the J2EE application (*.ear)
 clean         Removes all generated code and build artifacts
...

Um das Ant-Skript aus Eclipse heraus zu starten, ist es i.d.R. notwendig, das
JAR-Archiv tools.jar aus dem lib-Verzeichnis des JDK in den Classpath aufzunehmen.

Fuer das Deployment der Anwendung in JBoss müssen in der Datei build.properties
der JBoss-Installationspfad sowie der Name der JBoss-Serverkonfiguration hinterlegt
werden.

---[ Unit-Tests ]------------------------------------------------------------------
Die Unit Tests basieren auf JUnit 4.x, teilweise benoetigen sie den JBoss Embedded
Container, welcher mit im Repository vorhanden ist.

Das entsprechende Ant-Target ist "junit"

Damit das läuft, muss JUnit als Ant-Extension installiert sein.

---[ Ruby als Web Service Client ]-------------------------------------------------
* Download Ruby http://rubyforge.org/frs/download.php/12751/ruby185-21.exe
* Download Package http-access2 http://dev.ctor.org/download/http-access-2_0_6.tar.gz
* Download Package soap4r http://dev.ctor.org/download/soap4r-1_5_5.tar.gz
* Ruby installieren
* Beide Packages entpacken
* Beide Packages lassen sich mit ''ruby install.rb'' installieren
* Client-Skript liegt in SVN client/AuskunftWSClient.rb
* Client-Skript mit SciTE (mit Ruby geliefert) öffnen und ausführen
---[ ENDE ]---------------------------------------------------------------------